-- Copyright 2021 Kafka-Tarantool-Loader
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--     http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.

---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by ashitov.
--- DateTime: 8/4/20 12:30 PM
---
local checks = require('checks')
local log = require('log')

local kafka_callback_pipe = {}
kafka_callback_pipe.__index = kafka_callback_pipe
kafka_callback_pipe.__call = function (cls, ...)
    return cls.new(...)
end


local function kafka_callback_pipe_init (builder)
    checks('table')
    local self = setmetatable({}, kafka_callback_pipe)
    self.transformations = builder.transformations
    return true,self
end


function kafka_callback_pipe.process(self)
    for k,v in ipairs(self.transformations) do
        v:init()
        log.info("INFO: transformation %i initialized", k)
    end
end




local kafka_callback_pipe_builder = {}
kafka_callback_pipe_builder.__index = kafka_callback_pipe_builder
kafka_callback_pipe_builder.__type = 'kafka_callback_pipe_builder'
kafka_callback_pipe_builder.__call = function (cls, ...)
    return cls.new(...)
end

function kafka_callback_pipe_builder.init(init_message_channel)
    local self = setmetatable({}, kafka_callback_pipe_builder)
    self.transformations = {}
end

function kafka_callback_pipe_builder.add_transformation(self,transformation)
    checks('kafka_callback_pipe_builder','table')
    table.insert(self.transformations,transformation)
    return self
end

function kafka_callback_pipe_builder.build(self)
    checks('kafka_callback_pipe_builder')
    return kafka_callback_pipe_init(self)
end